@page
@model BuildingMaterials.Pages.Warehouses.IndexModel

@{
    ViewData["Title"] = "Склад";
}

<h1>Склад</h1>

<form asp-page="./Index" method="get">
    <div class="container">
        <p>
            <a asp-page="./Index">Вернуться к полному списку</a>
        </p>
        <div class="row">
            <div class="form-action no-color, col-sm">
                <p>
                    Найти по наименованию:
                    <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                    <input type="submit" name="Search" class="btn btn-primary" value="Поиск" />
                </p>
            </div>
        </div>
    </div>
</form>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" , asp-route-currentFilter="@Model.CurrentFilter" , asp-route-sortMaterial="@Model.NameSort">
                    @Html.DisplayNameFor(model => model.Warehouse[0].OrderID)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Warehouse[0].Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Warehouse[0].Unit)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Warehouse[0].DeliveryDate)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Warehouse)
        {
            @if (item.DeliveryDate.AddDays((double)item.Order.Material.ShelfLife) < DateTime.Now || item.Quantity == 0)
            {
                <tr class="table-danger">
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.Material.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.DeliveryDate)
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.Material.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Unit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Order.DeliveryDate)
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.Warehouse.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Warehouse.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Warehouse.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Предыдущая
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Warehouse.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Следующая
</a>
